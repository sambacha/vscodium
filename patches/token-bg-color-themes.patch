diff --git a/src/vs/editor/common/encodedTokenAttributes.ts b/src/vs/editor/common/encodedTokenAttributes.ts
index c0f2fad70f133..55f2d855527e0 100644
--- a/src/vs/editor/common/encodedTokenAttributes.ts
+++ b/src/vs/editor/common/encodedTokenAttributes.ts
@@ -124,9 +124,13 @@ export class TokenMetadata {
 
 	public static getClassNameFromMetadata(metadata: number): string {
 		const foreground = this.getForeground(metadata);
+		const background = this.getBackground(metadata);
 		let className = 'mtk' + foreground;
 
 		const fontStyle = this.getFontStyle(metadata);
+		if (background) {
+			className += ' mtkbg' + background;
+		}
 		if (fontStyle & FontStyle.Italic) {
 			className += ' mtki';
 		}
diff --git a/src/vs/editor/common/languages/supports/tokenization.ts b/src/vs/editor/common/languages/supports/tokenization.ts
index 7fa14b20a5cfb..3b9990ef927ea 100644
--- a/src/vs/editor/common/languages/supports/tokenization.ts
+++ b/src/vs/editor/common/languages/supports/tokenization.ts
@@ -415,6 +415,10 @@ export function generateTokensCSSForColorMap(colorMap: readonly Color[]): string
 		const color = colorMap[i];
 		rules[i] = `.mtk${i} { color: ${color}; }`;
 	}
+	for (let i = 1, len = colorMap.length; i < len; i++) {
+		const color = colorMap[i];
+		rules.push(`.mtkbg${i}::before { content: ""; position: absolute; top: 0; left: 0; background-color: ${color}; width: 100%; height: 100%; display: flex; z-index: -1; }`);
+	}
 	rules.push('.mtki { font-style: italic; }');
 	rules.push('.mtkb { font-weight: bold; }');
 	rules.push('.mtku { text-decoration: underline; text-underline-position: under; }');
